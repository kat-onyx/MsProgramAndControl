{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/game.js","webpack:///./src/gameView.js","webpack:///./src/index.js","webpack:///./src/maze.js","webpack:///./src/msPac.js","webpack:///./src/tile.js","webpack:///./src/util.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA,cAAc,mBAAO,CAAC,+BAAS;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;;;;;;;;;;AC1BA,aAAa,mBAAO,CAAC,6BAAQ;AAC7B,cAAc,mBAAO,CAAC,+BAAS;AAC/B,aAAa,mBAAO,CAAC,6BAAQ;AAC7B,aAAa,mBAAO,CAAC,6BAAQ;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,a;AACA;AACA;AACA;AACA,a;AACA;AACA;AACA;AACA,a;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;;AAEA;;;;;;;;;;;;ACjFA,aAAa,mBAAO,CAAC,6BAAQ;AAC7B,iBAAiB,mBAAO,CAAC,qCAAY;;AAErC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACXD,aAAa,mBAAO,CAAC,6BAAQ;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,sBAAsB;AAC7C,2BAA2B,yBAAyB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,sB;;;;;;;;;;;;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,uB;;;;;;;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,sB;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sB","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","const msPac = require('./msPac');\n// const Maze = require('./maze');\n\n// class Game {\n//     constructor(ctx, msPac) {\n//         this.ctx = ctx;\n//         this.msPac = msPac;\n//         // this.maze = new Maze(ctx);\n//     }\n\n//     draw(ctx) {\n//         // this.maze.draw(this.ctx);\n//         // ctx.beginPath()\n//         // ctx.fillStyle = \"#000000\";\n//         // ctx.fillRect(0,0, 700, 700);\n//     }\n\n//     positionToBounds() {\n//         //hash obj that stores updated TOP/BOTTOM/LEFY/RIGHT\n//         //can use this\n//     }\n\n// }\n\n// // const boardHeight = 1000;\n// // const boardWidth = 600;\n// module.exports = Game;\n","const Game = require('./game')\nconst MsPac = require('./msPac');\nconst Maze = require('./maze');\nconst Util = require('./util');\n\nclass GameView {\n    constructor(ctx) {\n        this.ctx = ctx;\n        this.msPac = new MsPac(this.ctx);\n        // this.game = new Game(this.ctx, this.msPac);\n        this.keyPressed = [];\n        this.maze = new Maze(this.ctx);\n\n        this.keyBinds = this.keyBinds.bind(this);\n    }\n\n    keyBinds() {\n        //keyCodes obtained here: https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyCode#Value_of_keyCode\n        document.addEventListener(\"keydown\", (e) => {\n            console.log(this.keyPressed)\n            if (e.code === \"KeyD\" && this.keyPressed.length <= 1) {\n                this.keyPressed.push(e.code)\n                this.msPac.moveRight();\n            } \n            if (e.code === \"KeyA\" && this.keyPressed.length <= 1) {\n                this.keyPressed.push(e.code)\n                this.msPac.moveLeft();\n            } \n            if (e.code === \"KeyW\" && this.keyPressed.length <= 1) {\n                this.keyPressed.push(e.code)\n                this.msPac.moveUp();\n            } \n            if (e.code === \"KeyS\" && this.keyPressed.length <= 1) {\n                this.keyPressed.push(e.code)\n                this.msPac.moveDown();\n            }\n        })\n\n        document.addEventListener(\"keyup\", (e) => {\n            // this.msPac.moveStop();\n            this.keyPressed.pop();\n        })\n    }\n\n    play() {\n        // debugger\n        this.keyBinds();\n        requestAnimationFrame(this.animate.bind(this));\n    }\n\n    animate() {\n        // this.game.draw(this.ctx);\n        this.detectWallCollision();\n        this.maze.draw(this.ctx);\n        this.msPac.draw(this.ctx);\n       \n\n        requestAnimationFrame(this.animate.bind(this));\n    }\n\n    detectWallCollision() {\n        // debugger\n        let distanceBetween;\n        let tileCenter = new Array(2);\n        this.maze.tiles.forEach( (tile) => {\n            tileCenter[0] = Math.floor(tile.xPos) + (Math.floor(tile.width / 2));\n            tileCenter[1] = Math.floor(tile.yPos) + (Math.floor(tile.height / 2));\n            // console.log(tileCenter)\n            distanceBetween = Util.distance(tileCenter, [this.msPac.posX, this.msPac.posY])\n            if (Math.floor(distanceBetween) < this.msPac.radius * 1.5) {\n                // debugger\n                console.log(\"collision detect\")\n                this.msPac.posX -= this.msPac.velX;\n                this.msPac.posY -= this.msPac.velY;\n                this.msPac.moveStop();\n                \n            }\n        })\n    }\n}\n\nmodule.exports = GameView;\n","const Game = require(\"./game\");\nconst GameView = require(\"./gameView\");\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n    const canvasEl = document.getElementsByTagName(\"canvas\")[0];\n    canvasEl.width = 630;\n    canvasEl.height = 750;\n\n    const ctx = canvasEl.getContext(\"2d\");\n    // const game = new Game(ctx);\n    new GameView(ctx).play();\n});\n\n","const Tile = require('./tile');\n\nclass Maze {\n    constructor(ctx) {\n        this.radius = 10;\n        this.ctx = ctx;\n        this.width = 700;\n        this.height = 750;\n        // bitmap for the grid\n        this.grid = [\n                [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n                [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n                [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n                [1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1],\n                [1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1],\n                [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n                [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n                [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1],\n                [1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1],\n                [1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1],\n                [1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1],\n                [1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1],\n                [1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1],\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 4, 5, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n                [1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 6, 7, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1],\n                [1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1],\n                [1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1],\n                [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1],\n                [1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1],\n                [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1],\n                [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1],\n                [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1],\n                [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1],\n                [1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1],\n                [1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1],\n                [1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1],\n                [1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1],\n                [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n                [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n                [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\n            ],\n            this.blocksize = this.width / (this.grid.length);\n        this.tiles = this.tiles();\n    }\n\n    tiles() {\n        let tiles = [];\n        for (let i = 0; i < this.grid.length; i++) {\n            for (let j = 0; j < this.grid[i].length; j++) {\n                // .75 modifier added to reduce gridlines\n                if (this.grid[i][j] === 1) {\n                    let tile = new Tile(j * this.blocksize, i * this.blocksize, this.blocksize, this.blocksize);\n                    // tile.draw(ctx);\n                    tiles.push(tile)\n                }\n            }\n        }\n        return tiles;\n    }\n\n    draw(ctx) {\n        ctx.beginPath()\n        ctx.fillStyle = \"#000000\";\n        ctx.fillRect(0, 0, 700, 700);\n        // debugger\n\n        this.tiles.forEach( tile => tile.draw(ctx))\n    }\n\n}\n\nmodule.exports = Maze;","\nclass MsPac {\n    constructor(ctx) {\n        this.ctx = ctx;\n        this.radius = 17;\n        this.posX = 315;\n        this.posY = 405;\n        // this.position = [this.posX, this.posY]\n        this.speed = 10;\n        this.velX = 0;\n        this.velY = 0;\n        this.lives = 3;\n        this.score = 0;\n\n        this.newPos = function() {\n            this.posX += this.velX;\n            this.posY += this.velY;\n            // this.position = [this.posX, this.posY]\n        }\n    }\n\n    draw(ctx) {\n        this.newPos();\n        ctx.fillStyle = \"yellow\";\n        ctx.beginPath();\n        ctx.arc(this.posX, this.posY, this.radius, 0, 2 * Math.PI);\n        ctx.fill();\n        ctx.stroke()\n    }\n\n    //currently incrementing by 3 due to a bug caused by the keyPressed arr in gameView\n    moveLeft() {\n        this.velY = 0;\n        this.velX = this.velX - 2;\n    }\n\n    moveRight() {\n        this.velY = 0;\n        this.velX = this.velX + 2;\n    }\n\n    moveUp() {\n        this.velX = 0;\n        this.velY = this.velY - 2;\n    }\n\n    moveDown() {\n        this.velX = 0;\n        this.velY = this.velY + 2;\n    }\n\n    moveStop() {\n        this.velX = 0;\n        this.velY = 0;\n    }\n}\n\nmodule.exports = MsPac;","\nclass Tile {\n    constructor(xPos, yPos, width, height) {\n        // debugger\n        this.width = width;\n        this.height = height;\n        this.xPos = xPos;\n        this.yPos = yPos;\n    }\n\n    draw(ctx) {\n        ctx.fillStyle = \"pink\";\n        ctx.fillRect(this.xPos, this.yPos, this.width, this.height);\n    }\n}\n\nmodule.exports = Tile;","const Util = {\n    distance(pos1, pos2) {\n        return Math.sqrt(\n            Math.pow((pos2[0] - pos1[0]), 2) + Math.pow((pos2[1] - pos1[1]), 2)\n        )\n    }\n}\n\nmodule.exports = Util;"],"sourceRoot":""}